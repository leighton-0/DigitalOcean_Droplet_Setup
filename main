#!/bin/bash

######################################################################
##             DigitalOcean Droplet - Basic Set Up Script           ##
#######################################################################
# To loginto a droplet from WSL ==> ssh root@147.182.204.60
#  example alias do3='ssh -i myssh1 root@ipv4'" >> .bashrc
# This script installs the following:-
#   git
#   ???
#   python3 & pip
#   standard aliases
#   wget
#   tmux with a custom config file --> forked from samoshkin/tmux-config --> towry/tmux-config used
#   nmap
#   standard build essentials
#   nano text editor from binaries with custom
#   ruby
#   dnsutils                     # dig & nslookup
#   whois                        # github reference site https://github.com/rfc1036/whois
#   dpkg - Debian package management system

## to install:-
#   need to first install curl ==> apt install curl
#   then
#   curl -k -s https://raw.githubusercontent.com/leighton-0/DigitalOcean_Droplet_Setup/main/main | bash


s=2                  # Slows scritpt down so you can see whats going on

printf '\n============================================================\n'
printf '[+] Updating System\n'
printf '============================================================\n\n'
apt update -y
apt upgrade -y
sleep $s

dpkg --configure -a

apt install wget -y
apt install ruby -y
apt install git -y
apt install tmux -y
git clone https://github.com/towry/tmux-config.git
./tmux-config/install.sh
apt install build-essential libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev  libgmp-dev zlib1g-dev -y
sleep 5
apt install nmap -y
apt install whois -y
apt install dnsutils -y

printf '\n============================================================\n'
printf '[+]  Upload standard .bash_aliases & upgrades to .bashrc. \n'
printf '============================================================\n\n'
sleep $s

if [ ! -f ~/.bashrc.bak ]; then                                                      # Check if bashrc.bak has already been copied. If yes then skip
    cp /root/.bashrc /root/.bashrc.bak                                               # bak Up bashrc incase I fuck it up

wget https://raw.githubusercontent.com/leighton-0/.dotfiles/main/.bash_aliases       # Upload my standard aliases file

cat <<"EOF" >>.bashrc                                                                #Add pointer to new .bash_aliases
if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi
EOF
fi

. .bashrc && . .bash_aliases                                                         #source .bashrc & .bash_aliases

printf '\n============================================================\n'
printf '[+]  Install nano text editor from binaries. \n'
printf '============================================================\n\n'
sleep $s

wget https://www.nano-editor.org/dist/v7/nano-7.2.tar.gz
tar -zxvf nano-7.2.tar.gz
cd nano-7.2
sudo apt install libncurses-dev
./configure
make
make install

#     python3 seems ot be installed by default on debian but not pip3 it seems!!
# apt-get install python3.11.2

#     get error ==> "error: externally-managed-environment" when try & install pip. rectify with:-
cd /usr/lib/python3.11
rm EXTERNALLY-MANAGED
cd ~
apt install python3-pip

printf '\n============================================================\n'
printf '[+]  Install CDNRECON \n'
printf '============================================================\n\n'
sleep $s

git clone https://github.com/Juuso1337/CDNRECON
cd CDNRECON
pip install https://github.com/PaulSec/API-dnsdumpster.com/archive/master.zip --user
pip3 install -r requirements.txt
pip install -U --user shodan
pip install pydig
pip install pysecuritytrails
echo "shodan=API-KEY-HERE" > conf                # create config file for API key
echo "securitytrails=API-KEY-HERE" >> conf       # create config file for API key
cd ~
# To use:-
# python3 main.py example.com -c config

printf '\n============================================================\n'
printf '[+]  Install spiderfoot \n'
printf '============================================================\n\n'
sleep $s

git clone https://github.com/smicallef/spiderfoot.git
cd spiderfoot
pip3 install -r requirements.txt
mv passwd passwd_OLD
echo "admin:password" > passwd
# access the SpiderFoot web application using the URL http://your-server-ip:3000. For me works better on chrome

# You can now start the SpiderFoot web application on port 3000 by running the following command:
# python3 sf.py -l your-server-ip:3000. For me works better on chrome
# 




